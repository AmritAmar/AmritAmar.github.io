<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AMRIT AMAR</title>
    <link>https://AmritAmar.github.io/</link>
    <description>Recent content on AMRIT AMAR</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 May 2019 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://AmritAmar.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://AmritAmar.github.io/archive/slider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/slider/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Academic</title>
      <link>https://AmritAmar.github.io/archive/hero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/hero/</guid>
      <description>&lt;p&gt;&lt;strong&gt;The Best Way to Create the Website You Want from Markdown (or Jupyter/RStudio)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Build &lt;strong&gt;Anything&lt;/strong&gt; with Widgets&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;text-shadow: none;&#34;&gt;&lt;a class=&#34;github-button&#34; href=&#34;https://github.com/gcushen/hugo-academic&#34; data-icon=&#34;octicon-star&#34; data-size=&#34;large&#34; data-show-count=&#34;true&#34; aria-label=&#34;Star this on GitHub&#34;&gt;Star&lt;/a&gt;&lt;script async defer src=&#34;https://buttons.github.io/buttons.js&#34;&gt;&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Skills</title>
      <link>https://AmritAmar.github.io/archive/skills/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/skills/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Experience</title>
      <link>https://AmritAmar.github.io/archive/experience/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/experience/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Accomplish&amp;shy;ments</title>
      <link>https://AmritAmar.github.io/archive/accomplishments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/accomplishments/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Recent Posts</title>
      <link>https://AmritAmar.github.io/archive/posts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/posts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://AmritAmar.github.io/archive/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/projects/</guid>
      <description></description>
    </item>
    
    <item>
      <title>People</title>
      <link>https://AmritAmar.github.io/archive/people/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/people/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Recent &amp; Upcoming Talks</title>
      <link>https://AmritAmar.github.io/archive/talks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/talks/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Featured Publications</title>
      <link>https://AmritAmar.github.io/archive/featured/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/featured/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Academic Kickstart</title>
      <link>https://AmritAmar.github.io/archive/demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/demo/</guid>
      <description>&lt;p&gt;Welcome to the &lt;strong&gt;Academic Kickstart&lt;/strong&gt; template!&lt;/p&gt;

&lt;p&gt;Follow our &lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;Getting Started&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/docs/widgets/&#34; target=&#34;_blank&#34;&gt;Page Builder&lt;/a&gt; guides to easily personalize the template and then &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/&#34; target=&#34;_blank&#34;&gt;add your own content&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For inspiration, check out &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#demo-content&#34; target=&#34;_blank&#34;&gt;the Markdown files&lt;/a&gt; which power the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;personal demo&lt;/a&gt;. The easiest way to publish your new site to the internet is with &lt;a href=&#34;https://sourcethemes.com/academic/docs/deployment/&#34; target=&#34;_blank&#34;&gt;Netlify&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;View the documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io/&#34; target=&#34;_blank&#34;&gt;Ask a question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;Request a feature or report a bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updating? View the &lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support development of Academic:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://paypal.me/cushen&#34; target=&#34;_blank&#34;&gt;Donate a coffee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patreon.com/cushen&#34; target=&#34;_blank&#34;&gt;Become a backer on Patreon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34; target=&#34;_blank&#34;&gt;Decorate your laptop or journal with an Academic sticker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academic.threadless.com/&#34; target=&#34;_blank&#34;&gt;Wear the T-shirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;This homepage section is an example of adding &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;elements&lt;/a&gt; to the &lt;a href=&#34;https://sourcethemes.com/academic/docs/widgets/&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Blank&lt;/em&gt; widget&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Backgrounds can be applied to any section. Here, the &lt;em&gt;background&lt;/em&gt; option is set give a &lt;em&gt;color gradient&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To remove this section, delete &lt;code&gt;content/home/demo.md&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Popular Topics</title>
      <link>https://AmritAmar.github.io/archive/tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/tags/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://AmritAmar.github.io/archive/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/archive/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Stelliform</title>
      <link>https://AmritAmar.github.io/project/stelliform/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/project/stelliform/</guid>
      <description>&lt;p&gt;&lt;em&gt;A star has fallen from the sky and the race is on to go claim it. However, the monsters around the area will not make it easy. Players can choose to play as a warrior, rogue, or wizard to blast through enemies by choosing powerful spells or attacks and casting them as quickly as possible while dodging enemy blows to stay alive.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Stelliform is a real-time action card game that relies on quick swiping mechanics, split-second decision making, and pre-game planning. The integration of a real-time strategy card game with a stimulating swipe mechanic makes Stelliform a distinct and unique mobile game. By combining strategic card-based elements and real-time action, we want players to step into the shoes of a spellcaster, defeating enemies by constructing a spell deck and planning and casting spells under time pressure.&lt;/p&gt;

&lt;p&gt;The game was produced by Team Sicko Code, consisting of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amrit Amar &lt;em&gt;(Project Lead)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Alan Pascual &lt;em&gt;(Architecture Lead)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Luke Shin &lt;em&gt;(Programmer)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Brandon Zhang &lt;em&gt;(Programmer)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Hanna Arfine &lt;em&gt;(UI/UX Artist)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Ally Yuan &lt;em&gt;(Character Artist)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Michael Yee &lt;em&gt;(Music)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The game is made using CUGL (Cornell University Graphics Library), a game engine designed by &lt;a href=&#34;https://www.cs.cornell.edu/~wmwhite/&#34; target=&#34;_blank&#34;&gt;Professor Walker White&lt;/a&gt; in C++. As project lead, I managed the team, worked on imagining the core gameplay mechanics, set up meetings and developed a workflow and plan. Deliverables were due every two weeks and I learned how to manage a team effectively. As a programmer, I implemented graphics and animations in C++, along with Android Building and testing.&lt;/p&gt;









  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/stelliform/gallery/a.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/stelliform/gallery/a_hu30ce87c738cffa646e22b2f11a6a3d3e_1640858_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/stelliform/gallery/b.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/stelliform/gallery/b_hu2c7ebc69544b1ab6effe9d3d0b20ae77_1859154_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/stelliform/gallery/c.jpg&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/stelliform/gallery/c_hub968039be8bef3bf8021b0affcd3609b_426512_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/stelliform/gallery/d.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/stelliform/gallery/d_hubef768a9f12543cbd1fdec8193f4c174_1090578_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/stelliform/gallery/e.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/stelliform/gallery/e_hu80fa136eb35823e713e76336e643c09e_959569_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/stelliform/gallery/f.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/stelliform/gallery/f_hu05e4240577647107b63b243357e8ceb3_987068_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/stelliform/gallery/g.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/stelliform/gallery/g_hu955c44cb1dfe6137d3bdf42c2f411bbb_1374568_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Viridian</title>
      <link>https://AmritAmar.github.io/project/viridian/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/project/viridian/</guid>
      <description>&lt;p&gt;&lt;em&gt;You&amp;rsquo;ve crashed on a mysterious world after getting caught in an explosion. You&amp;rsquo;ve lost the shards that allowed you to fly and explore the galaxy. Make your way through different environments to find the shards and escape from the planet!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Viridian is an action webgame made that relies on precise mechanics to make your way through a magical forest. Use your mouse to shoot and gain momentun as you travel through 3 biomes. Beware of shooting plants, however, as the forest is connected to each other and plants will actively try to defend their fellow flora.&lt;/p&gt;

&lt;p&gt;The game was produced by Team LVI Studios, consisting of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amrit Amar &lt;em&gt;(Project Lead)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Alan Pascual &lt;em&gt;(Architecture Lead)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Justin Lue &lt;em&gt;(Programmer)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Brandon Zhang &lt;em&gt;(Programmer)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Yanying (Mary) Ji &lt;em&gt;(UI/UX Artist)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Urael Xu &lt;em&gt;(Character Artist)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The game is made using Unity Game Engine. Throughout development, the team released several builds of the game and gathered data using A/B testing on statistics such as player deaths, time spent on levels, and other indicators that the team used to incrementally build a better game. As project lead, I managed the team, worked on imagining the core gameplay mechanics, set up meetings and developed a workflow and plan. Deliverables were due every two weeks and I learned how to manage a team effectively. As a programmer, I implemented the levels and graphics in C#.&lt;/p&gt;









  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/viridian/gallery/a.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/viridian/gallery/a_hu463d0b80dc2b1879ece1e58bc591e2fb_1272007_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/viridian/gallery/b.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/viridian/gallery/b_hua97c29243ca57062aad9a3eee46f9fae_1268695_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/viridian/gallery/c.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/viridian/gallery/c_hu91fa153f56f3815e358d09132f3ea5b4_604682_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/viridian/gallery/d.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/viridian/gallery/d_hu0812b250b1d9974da690e1aed429203c_188992_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/viridian/gallery/e.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/viridian/gallery/e_hu67edee6745ae5f14af4ebdee30affe49_904560_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Genetic Self-Driving Cars</title>
      <link>https://AmritAmar.github.io/project/geneticselfdrivingcars/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/project/geneticselfdrivingcars/</guid>
      <description>&lt;p&gt;This is a project I did to learn about Neural Networks and Genetic Algorithms. We create a neural network to drive a car and then use genetic algorithms to train and find the best weights for the neural network. The network takes in 6 inputs and outputs the acceleration and steering of the car.&lt;/p&gt;

&lt;p&gt;Here, we see all the cars beginning to get initialized with a random neural network. They are pretty dumb.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticSelfDrivingCars/master/Gifs/FirstGen.gif&#34; alt=&#34;FG&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In the editor, this is the information that cars get (as shown by the yellow lines).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticSelfDrivingCars/master/Gifs/NNView.gif&#34; alt=&#34;NN&#34; /&gt;&lt;/p&gt;

&lt;p&gt;By generation 22, we have a car that can finish the whole track (albeit not smoothly)!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticSelfDrivingCars/master/Gifs/BestCar.gif&#34; alt=&#34;BC&#34; /&gt;&lt;/p&gt;

&lt;p&gt;On average, it takes about 22 generations to train the neural network fully.&lt;/p&gt;

&lt;p&gt;The neural network has 6 input nodes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;current speed&lt;/li&gt;
&lt;li&gt;distance of closest obstacle from the left side (max 10m)&lt;/li&gt;
&lt;li&gt;distance of closest obstacle from the right side (max 10m)&lt;/li&gt;
&lt;li&gt;distance of closest obstacle from the front (max 10m)&lt;/li&gt;
&lt;li&gt;distance of closest obstacle from the front-left side (max 10m)&lt;/li&gt;
&lt;li&gt;distance of closest obstacle from the front-right side (max 10m)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is 1 hidden layer, consisting of 5 nodes. There is 1 output layer, consisting of 2 nodes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Acceleration (-1 to 1)&lt;/li&gt;
&lt;li&gt;Steering (-1 to 1)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use tanH as my activation function.&lt;/p&gt;

&lt;p&gt;There are 3 main scripts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CarController: this is the script for a car. Has a neural network that drives the car.&lt;/li&gt;
&lt;li&gt;CarManager: manager for the population of cars&lt;/li&gt;
&lt;li&gt;NeuralNetwork: holds the neural network code&lt;/li&gt;
&lt;li&gt;GeneticAlgorithmController: performs the selection process of the algorithm
The program works as follows:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The input and hidden layer nodes have both a weight and a bias, that is randomly generated for the population of cars (default 10). They are then simulated as generation 1 on the race track. After all the cars crash or 60 seconds, the algorithm chooses the best 2 cars (based on displacement from starting point) and then creates the next generation of cars by combining the best 2 cars genes (randomly selecting between the 2 or a combination thereof). There is an option that allows us to keep the best 2 cars in the next generation or to generate all new cars in the population from the parents (i.e. the parents die). The next generation is then simulated and so on.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Particle Simulation of Life</title>
      <link>https://AmritAmar.github.io/project/particlesimulationoflife/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/project/particlesimulationoflife/</guid>
      <description>&lt;p&gt;This is a C++ implementation of a particle system. The project simulates particles in a &amp;lsquo;box&amp;rsquo; and assigns random forces between different types of particles. Interestingly, certain behaviors arise that are &amp;lsquo;life-like&amp;rsquo; from these rules. The particles interact with each other arising in behaviors that mimic cell behavior.&lt;/p&gt;

&lt;p&gt;The way this simulation works is that each particle type has a certain force associated with another particle type. Sometimes force can attract, sometimes it repels. The force is stronger the closer the two particles are, but after a certain point, they do not affect each other. The randomization of these forces leads to a number of interesting behaviors. I highly encourage people to create their own PSimulations!&lt;/p&gt;

&lt;p&gt;In the example below, I simulate a &amp;lsquo;glider&amp;rsquo; world, where particles form gliders and fly around the boxed world. It&amp;rsquo;s mesmerising to see how a few simple rules between particles causes this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/AmritAmar/ParticleSimulationOfLife/raw/master/Glider%20Boxed.gif&#34; alt=&#34;Glider Boxed&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I was inspired by this from an Evolution Class I took at Cornell where I read the theories of biologist Lynn Margulis. I was further inspired to create my own implementation from Jeffrey Ventrella&amp;rsquo;s &lt;a href=&#34;http://www.ventrella.com/Clusters/&#34; target=&#34;_blank&#34;&gt;Clusters&lt;/a&gt;, which has examples in both the browser and in augmented reality. Furthermore, I also drew inspiration from &lt;a href=&#34;http://zool33.uni-graz.at/artlife/PPS&#34; target=&#34;_blank&#34;&gt;this study&lt;/a&gt;. The main idea, from &lt;a href=&#34;https://evolution.berkeley.edu/evolibrary/article/history_24&#34; target=&#34;_blank&#34;&gt;Lynn Margulis&lt;/a&gt; is that all organisms naturally gravitate to other kinds of organisms, and likewise are repelled by different organisms. These particles experience attractions and repulsions with other particles of different colors. They cluster into social pods, or scatter and flee, often mimicking biological behaviors. Clusters shapeshift and exchange parts of their identities, much like the tiny organisms that came together in early evolution to form symbiotic unions.&lt;/p&gt;

&lt;p&gt;In this example, I simulate a unboxed world that creates medium clusters. This leads to a roaming behaviour by these clusters all around the map!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/AmritAmar/ParticleSimulationOfLife/raw/master/Clusters%20Unboxed.gif&#34; alt=&#34;Medium Clusters Unboxed&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OutOfSync</title>
      <link>https://AmritAmar.github.io/project/outofsync/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/project/outofsync/</guid>
      <description>&lt;p&gt;&lt;em&gt;You are a lab assistant who has accidentally shattered the fabric of reality and created numerous rifts between worlds. Time, gravity, and even color have been drained from the world. Now you must travel through these rifts, recover the scattered shards of
space, and restore them to the riftss in order to fix the damage to reality.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;OutOfSync is a action, strategy platformer that relies on quick decision making and mechanics. You must plan your route and be quick as you collect the shards, return back to repair the rifts, and move to the next level. However, as you are doing this, clones of you will take your exact path - collide with them and you lose the game.&lt;/p&gt;

&lt;p&gt;The game was produced by Team Tektite, consisting of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amrit Amar &lt;em&gt;(Project Lead)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Alan Pascual &lt;em&gt;(Architecture Lead)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Luke Shin &lt;em&gt;(Programmer)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Brandon Zhang &lt;em&gt;(Programmer)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Cathy Liu &lt;em&gt;(UI/UX Artist)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Sarah Skrutskie &lt;em&gt;(Character Artist)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Special thanks to Adam Pascual for an amazing soundtrack!&lt;/p&gt;

&lt;p&gt;The game is made using LibGDX and Box2D. As project lead, I managed the team, worked on imagining the core gameplay mechanics, set up meetings and developed a workflow and plan. Deliverables were due every two weeks and I learned how to manage a team effectively. As a programmer, I implemented graphics and animations in Java, along with building and testing the game.&lt;/p&gt;









  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/outofsync/gallery/a.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/outofsync/gallery/a_hude9a43581b792d18a7b7a457d5421db0_85400_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/outofsync/gallery/b.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/outofsync/gallery/b_huc0fadea28317b51dfd0645f4c32f7176_315784_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/outofsync/gallery/c.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/outofsync/gallery/c_hu72dabc5fa29dc949485dfde7b1159ea4_201207_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/outofsync/gallery/d.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/outofsync/gallery/d_hue157b7315240659e0bf29e78f04e32ea_323754_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://AmritAmar.github.io/project/outofsync/gallery/e.png&#34; &gt;
  &lt;img src=&#34;https://AmritAmar.github.io/project/outofsync/gallery/e_hucbaae8edaeb8b2f5ce062b9ff763bf8e_383992_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Genetic Images</title>
      <link>https://AmritAmar.github.io/project/geneticimages/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/project/geneticimages/</guid>
      <description>

&lt;p&gt;This is a project I made for my Artificial Intelligence Class under the Team &amp;ldquo;Real Intelligence&amp;rdquo;. It is a image generation program that uses primitive shapes to generate images using genetic algorithms.&lt;/p&gt;

&lt;p&gt;Our intention was to complete a project exploring the concept of genetic algorithms within artificial intelligence. Genetic Algorithms use the concept of natural selection to find a minima to a function. In this case, the genetic algorithm tries to replicate a picture using only primitive shapes and tries to bring the generated picture as close to the real picture as possible.&lt;/p&gt;

&lt;p&gt;To generate the image, we can adjust the number of shapes, the mutation rate, and the types/combinations of shapes to use in the generated image:
- Circles (mutate the position, radius, color)
- Ellipses (mutate the position, width, height, color)
- Rectangles (mutate the position, width, height, color)
- Pixels (n-pixels long squares, mutate the pixel position, color)
- n-sided polygons&lt;/p&gt;

&lt;p&gt;Our implementation focuses on using a single-parent. This means that during each generation, only one picture is used to create all the children. A parent is replaced when one of the children has a better fitness score (or worse, rather). Our fitness function work by comparing the child to the original image pixel by pixel.&lt;/p&gt;

&lt;p&gt;The pseudocode for our genetic algorithm is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generate a random image based on user-defined configurations, mainly number of shapes and types of shapes to use. Every ‘individual’ image has a ‘DNA’ that is a collection of shapes. These shapes are randomly generated and are assigned random colors. This individual image’s fitness score is also calculated here.&lt;/li&gt;
&lt;li&gt;We then generate a new image with a certain mutation rate. This new image will have random differences from the parent image (differences ranging from changing the shapes’ position or dimensions to changing the shapes’ color).&lt;/li&gt;
&lt;li&gt;The new image is then compared with the original image. We then compare the new image’s fitness score with the parent’s fitness score. If the image’s fitness score is lower than that of the parent image (i.e, there is less error in this image, thus the new image is closer to the original picture than the parent image), then we update the parent image to be the new image. If the fitness score is higher than the parent’s score, then we simply keep the same parent for the next generation.&lt;/li&gt;
&lt;li&gt;Go to part 2 and repeat until fitness score of the parent is 0.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;example-1-eiffel-tower&#34;&gt;Example 1: Eiffel Tower:&lt;/h3&gt;

&lt;h4 id=&#34;target-picture&#34;&gt;Target Picture:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticImages/master/eiffel2.png&#34; alt=&#34;EFOG&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;starting-the-algorithm&#34;&gt;Starting the Algorithm:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticImages/master/Gifs/EiffelStart.gif&#34; alt=&#34;EF1&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;after-a-bit-of-time&#34;&gt;After a bit of time:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticImages/master/Gifs/EiffelMedium.gif&#34; alt=&#34;EF2&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;after-a-long-time&#34;&gt;After a long time:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticImages/master/Gifs/EiffelEnd.gif&#34; alt=&#34;EF3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Notice how the sky gradient is captured by the generated picture, simply by the adjustment of the alpha of overlapping shapes!&lt;/p&gt;

&lt;p&gt;Over time, the error in the generated images decreases. Of course, this happens over thousands of generations. As we used our program with a multitude of images, we noticed that some shapes converge to target images better than other shapes. For the full evaluation, check out our &lt;a href=&#34;https://drive.google.com/file/d/18TFZThbFswRllVY08Np8gfi7XHtzdqvD/view&#34; target=&#34;_blank&#34;&gt;report&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;example-2-mona-lisa&#34;&gt;Example 2: Mona Lisa:&lt;/h3&gt;

&lt;h4 id=&#34;target-picture-1&#34;&gt;Target Picture:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticImages/master/mona_lisa.jpg&#34; alt=&#34;EFOG&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;starting-the-algorithm-1&#34;&gt;Starting the Algorithm:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticImages/master/Gifs/MonaBegin.gif&#34; alt=&#34;EF1&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;after-a-bit-of-time-1&#34;&gt;After a bit of time:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticImages/master/Gifs/MonaMedium.gif&#34; alt=&#34;EF2&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;after-a-long-time-1&#34;&gt;After a long time:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AmritAmar/GeneticImages/master/Gifs/MonaEnd.gif&#34; alt=&#34;EF3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Surprisingly, the algorithm seems to capture the background really well! Of course, facial features will take quite a while to develop as there is not much of a pixel difference from this image and one with facial features.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Hand</title>
      <link>https://AmritAmar.github.io/project/the-hand/</link>
      <pubDate>Sun, 21 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/project/the-hand/</guid>
      <description>&lt;p&gt;This is a hand that can be used to do a lot of things. The basic motive of the project is that the user will wear the control glove, and will be able to control the robotic hand using their movements. A close friend and I made a robotic animatronic hand that could potentially help save lives in the event of an accident in Mines, one of Botswana&amp;rsquo;s main industries.&lt;/p&gt;

&lt;p&gt;There are many uses for this such as Space Exploration and in the Mining Industry. Instead of using AI, that can&amp;rsquo;t react to all situations in an environment, we can use robots, that are controlled by the user. Humans can react to sudden environmental changes and, using &amp;ldquo;The Hand&amp;rdquo;, they can improvise and adapt.&lt;/p&gt;

&lt;p&gt;For making the Project, we used an Arduino Leonardo, Flex Sensors and Servo Motors. The Arduino is a microprocessor that basically reads from code uploaded to it from a computer (C/C++ Code) and therefore through the use of Digital and Analog I/O pins, executes the code. Flex Sensors are Variable Resistors that change values depending on how much they are bent by. Servo Motors are precision DC motors that can be controlled to point to the exact angle from 0 to 180 Degrees.&lt;/p&gt;

&lt;p&gt;What basically happens here is that the Flex Sensor readings are inputs through the Analog Pins. It is processed and mapped to a angle. The angle is then written to the Servo Motors, thus turning them and therefore moving the fingers. There are also two buttons that control a LED and a Speaker. On the breadboard, there is an LDR (Light dependent resistor) that basically measure the amount of light in a room. Using those values, it gives a green light or a yellow light. The Arduino can be used to do a lot of things!&lt;/p&gt;

&lt;p&gt;In the future, we hope to develop a better working hand with all fingers working and an opposable thumb. This would allow us to hold things. The next stage of this project is to finish the hand and make sure it can pick up things.&lt;/p&gt;

&lt;p&gt;We won first place at a National Competition (The Botho College ICT Linkz Challenge 2014) with this project. Thank you to everyone who helped out!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=TA5GpAQBzUY&#34; target=&#34;_blank&#34;&gt;A Video Demonstration can be found here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://AmritAmar.github.io/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/projects/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AmritAmar</title>
      <link>https://AmritAmar.github.io/experience/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://AmritAmar.github.io/experience/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
